library(dada2)
packageVersion("dada2")
library(ShortRead)
packageVersion("ShortRead")
library(Biostrings)
packageVersion("Biostrings")
library(phyloseq)
library(dplyr)

setwd("~/Documents/16S/filtN_16S1")

path <- "~/Documents/16S/filtN_16S1"
list.files(path)

fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2_001.fastq", full.names = TRUE))

sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)

plotQualityProfile(fnFs[3:4])
plotQualityProfile(fnRs[3:4])

#place filtered files in filtered/subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names,"_F_filt.fastq.gz"))
filtRs <- file.path(path, "filtered", paste0(sample.names,"_R_filt.fastq.gz"))
names(filtFs) <- sample.names
names(filtRs) <- sample.names

out = filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen = c(200,150), 
                    maxN = 0, maxEE = c(2,2), truncQ = 2, rm.phix = TRUE, 
                    compress = TRUE, multithread = TRUE)

head(out)

##Learn the error rates
errF <- learnErrors(filtFs, multithread=TRUE)
errR <- learnErrors(filtRs, multithread=TRUE)

plotErrors(errF, nominalQ = TRUE)

##Sample inference
dadaFs <- dada(filtFs, err = errF, multithread = TRUE)
dadaRs <- dada(filtRs, err = errR, multithread = TRUE)

dadaFs[[1]]

##Merge paired reads
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose = TRUE)
head(mergers[[1]])

##Constructing the sequence table
seqtab <- makeSequenceTable(mergers)
dim(seqtab)

##inspecting the distribution of sequence lengths
table(nchar(getSequences(seqtab)))

##Remove chimeras
seqtab.nochim <- removeBimeraDenovo(seqtab, method = "consensus", multithread = TRUE, verbose = TRUE)
dim(seqtab.nochim)

sum(seqtab.nochim)/sum(seqtab)


##Track reads through the pipeline
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), sapply(dadaRs, getN), sapply(mergers, getN), rowSums(seqtab.nochim))

colnames(track) <- c("input", "filtered", "denoisedF", "denoisedR", "merged", "nonchim")
rownames(track) <- sample.names
head(track)


##Assign taxonomy
taxa_16S <- assignTaxonomy(seqtab.nochim, "~/Downloads/silva_nr99_v138.1_train_set.fa.gz", multithread=TRUE) 

head(taxa_16S)

taxa_16Ssp <- addSpecies(taxa_16S,"~/Downloads/silva_species_assignment_v138.1.fa.gz") 

head(taxa_16Ssp)

##Save seqtab

saveRDS(seqtab.nochim,"~/Documents/16S/16S_seqtab.rds")

##Save tax table

write.table(taxa_16S,"~/Documents/16S/16S_taxtab.txt", sep = "\t", row.names = FALSE)

save.image("~/Documents/16S/dada2_16S.RData")



##export data
###check class and dimension of the OTU matrix
str(seqtab.nochim)
class(seqtab.nochim)
###Export matrix in an excel file

write.csv(seqtab.nochim, "~/Documents/16S/seqtab.nochin.csv")

###check class and dimension of the taxa table
str(taxa_16Ssp)
class(taxa_16Ssp)

###export matrix in an excel file
write.csv(taxa_16Ssp, "~/Documents/16S/taxa.csv")
